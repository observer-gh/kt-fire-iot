spring:
  application:
    name: controltower
  profiles:
    active: local
  # Database configuration removed - ControlTower doesn't need a database

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true

server:
  port: 8080

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  info:
    title: ControlTower API
    description: Central hub for read-only access to IoT fire monitoring data
    version: 1.0.0
    contact:
      name: Fire IoT MSA Team

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:controltower-group}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "videoAnalysis.fireDetected:com.fireiot.controltower.events.VideoFireDetected,datalake.sensorDataAnomalyDetected:com.fireiot.controltower.events.SensorAnomalyDetected"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      # Azure Event Hub specific properties (ignored for local Kafka)
      "[security.protocol]": ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
      "[sasl.mechanism]": ${KAFKA_SASL_MECHANISM:}
      "[sasl.jaas.config]": ${KAFKA_SASL_CONFIG:}
    topics:
      sensor-anomaly-detected: ${KAFKA_TOPIC_SENSOR_ANOMALY:datalake.sensorDataAnomalyDetected}
      video-fire-detected: ${KAFKA_TOPIC_VIDEO_FIRE:videoAnalysis.fireDetected}
      fire-detection-notified: ${KAFKA_TOPIC_FIRE_NOTIFY:controlTower.fireDetectionNotified}
      warning-alert-issued: ${KAFKA_TOPIC_WARNING_ALERT:controltower.warningAlertIssued}
      emergency-alert-issued: ${KAFKA_TOPIC_EMERGENCY_ALERT:controltower.emergencyAlertIssued}

# Logging
logging:
  level:
    com.fireiot.controltower: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Local Profile
spring:
  config:
    activate:
      on-profile: local
  # Database configuration removed - ControlTower doesn't need a database
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:controltower-group}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "videoAnalysis.fireDetected:com.fireiot.controltower.events.VideoFireDetected,datalake.sensorDataAnomalyDetected:com.fireiot.controltower.events.SensorAnomalyDetected"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      # Local development uses PLAINTEXT (default values)
      "[security.protocol]": ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}

---
# Cloud Profile
spring:
  config:
    activate:
      on-profile: cloud
  # Database configuration removed - ControlTower doesn't need a database
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:controltower-group}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "videoAnalysis.fireDetected:com.fireiot.controltower.events.VideoFireDetected,datalake.sensorDataAnomalyDetected:com.fireiot.controltower.events.SensorAnomalyDetected"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      # Azure Event Hub configuration (injected by Bicep)
      "[security.protocol]": ${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
      "[sasl.mechanism]": ${KAFKA_SASL_MECHANISM:PLAIN}
      "[sasl.jaas.config]": ${KAFKA_SASL_CONFIG}

logging:
  level:
    com.fireiot.controltower: INFO
    org.springframework.web: WARN
